#!/usr/bin/env ruby
#
# Yet another parallel ssh wrapper
#

require 'optparse'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), 'lib')
require 'net/sshr'

$stdout.sync = true

# Parse options
opts = OptionParser.new
opts.banner = "Usage: sshr [options] <host1> [<host2> ...] <cmd>"
opts.on('-?', '-h', '--help') do
  puts opts
  exit
end

begin
  args = opts.parse(ARGV)
rescue => e
  puts "Error: " << e
  puts opts
  exit
end
if args.length < 2:
  puts opts
  exit
end

cmd = args.pop
#puts "hosts: #{args.join(' ')}"
#puts "cmd:   #{cmd}"

trap("INT") { puts; exit }

sshr = Net::SSHR.new({ :hosts => args })
sshr.exec(cmd) do |r|
  format = "[%s] %-15.15s %s\n"
  output = r[:stdout] || r[:stderr] || ''
  printf format, r[:code], r[:host] + ':', output.chomp
end

